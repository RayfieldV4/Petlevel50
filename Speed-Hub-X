-- Speed Hub X | GUI Script
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "SpeedHubX"

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = screenGui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
title.TextColor3 = Color3.new(1,1,1)
title.TextScaled = true
title.Text = "Speed Hub X | v5.5.0"
title.Parent = mainFrame

-- Scroll container for options
local options = Instance.new("ScrollingFrame")
options.Size = UDim2.new(1, 0, 1, -40)
options.Position = UDim2.new(0, 0, 0, 40)
options.CanvasSize = UDim2.new(0, 0, 2, 0)
options.ScrollBarThickness = 8
options.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
options.Parent = mainFrame

-- Helper function to add toggle buttons
local function addToggle(name, parent)
	local toggle = Instance.new("TextButton")
	toggle.Size = UDim2.new(1, -20, 0, 40)
	toggle.Position = UDim2.new(0, 10, 0, #parent:GetChildren() * 45)
	toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	toggle.TextColor3 = Color3.new(1,1,1)
	toggle.Text = "üîò " .. name
	toggle.Font = Enum.Font.SourceSans
	toggle.TextSize = 22
	toggle.TextXAlignment = Enum.TextXAlignment.Left
	toggle.Parent = parent

	local isEnabled = false
	toggle.MouseButton1Click:Connect(function()
		isEnabled = not isEnabled
		toggle.Text = (isEnabled and "‚úÖ " or "üîò ") .. name
		print(name .. ": " .. (isEnabled and "Enabled" or "Disabled"))
	end)
end

-- Add all options
local optionsList = {
	-- General Options
	"Auto Submit All Tranquil",
	"Auto Restore Stock In Zen Shop",

	-- Corrupted Event Section
	"[ Corrupted Event ]",
	"Auto Give Tranquil to Kitsune",
	"Auto Give Corrupt to Kitsune",

	-- Cooking Event Section
	"[ Cooking Event ]",
	"Auto Cook All Dishes",
	"Auto Submit Cooked Items",
	"Auto Give Cooking Pets"
}

for _, option in ipairs(optionsList) do
	addToggle(option, options)
end
Sylv
-- Speed Hub X | GUI Script - Realistic Version
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "SpeedHubX"
screenGui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = screenGui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
title.TextColor3 = Color3.new(1,1,1)
title.TextScaled = true
title.Text = "Speed Hub X | v5.5.0"
title.Parent = mainFrame

-- Notifications
local function notify(msg)
	local note = Instance.new("TextLabel")
	note.Size = UDim2.new(0, 300, 0, 40)
	note.Position = UDim2.new(0.5, -150, 0, 20)
	note.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	note.TextColor3 = Color3.new(1, 1, 1)
	note.Text = msg
	note.TextScaled = true
	note.Font = Enum.Font.GothamBold
	note.Parent = screenGui
	note.BackgroundTransparency = 0.3

	game:GetService("TweenService"):Create(note, TweenInfo.new(1), {
		Position = note.Position + UDim2.new(0, 0, 0, -50),
		TextTransparency = 1,
		BackgroundTransparency = 1
	}):Play()

	game.Debris:AddItem(note, 2)
end

-- Scroll container for options
local options = Instance.new("ScrollingFrame")
options.Size = UDim2.new(1, 0, 1, -40)
options.Position = UDim2.new(0, 0, 0, 40)
options.CanvasSize = UDim2.new(0, 0, 2, 0)
options.ScrollBarThickness = 8
options.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
options.Parent = mainFrame

-- State storage for toggles
local activeToggles = {}

-- Helper function to add toggle buttons
local function addToggle(name, parent, func)
	local toggle = Instance.new("TextButton")
	toggle.Size = UDim2.new(1, -20, 0, 40)
	toggle.Position = UDim2.new(0, 10, 0, #parent:GetChildren() * 45)
	toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	toggle.TextColor3 = Color3.new(1,1,1)
	toggle.Text = "üîò " .. name
	toggle.Font = Enum.Font.SourceSans
	toggle.TextSize = 22
	toggle.TextXAlignment = Enum.TextXAlignment.Left
	toggle.Parent = parent

	local isEnabled = false
	toggle.MouseButton1Click:Connect(function()
		isEnabled = not isEnabled
		activeToggles[name] = isEnabled
		toggle.Text = (isEnabled and "‚úÖ " or "üîò ") .. name
		notify(name .. ": " .. (isEnabled and "Enabled" or "Disabled"))
		if func then func(isEnabled) end
	end)
end

-- Simulated background loops
local function startLoop(name, delayTime, action)
	spawn(function()
		while true do
			if not activeToggles[name] then break end
			action()
			wait(delayTime)
		end
	end)
end

-- Add all options
local optionsList = {
	-- General
	{ name = "Auto Submit All Tranquil", func = function(on)
		if on then
			startLoop("Auto Submit All Tranquil", 5, function()
				notify("Submitted all Tranquil üçÉ")
			end)
		end
	end },

	{ name = "Auto Restore Stock In Zen Shop", func = function(on)
		if on then
			startLoop("Auto Restore Stock In Zen Shop", 6, function()
				notify("Restocked Zen Shop üõí")
			end)
		end
	end },

	-- Corrupted Event
	{ name = "[ Corrupted Event ]", func = nil },

	{ name = "Auto Give Tranquil to Kitsune", func = function(on)
		if on then
			startLoop("Auto Give Tranquil to Kitsune", 7, function()
				notify("Gave Tranquil to Kitsune ü¶ä")
			end)
		end
	end },

	{ name = "Auto Give Corrupt to Kitsune", func = function(on)
		if on then
			startLoop("Auto Give Corrupt to Kitsune", 7, function()
				notify("Gave Corrupt to Kitsune üíÄ")
			end)
		end
	end },

	-- Cooking Event
	{ name = "[ Cooking Event ]", func = nil },

	{ name = "Auto Cook All Dishes", func = function(on)
		if on then
			startLoop("Auto Cook All Dishes", 4, function()
				notify("Cooked a random dish üç≥")
			end)
		end
	end },

	{ name = "Auto Submit Cooked Items", func = function(on)
		if on then
			startLoop("Auto Submit Cooked Items", 5, function()
				notify("Submitted cooked items to Chef NPC üë®‚Äçüç≥")
			end)
		end
	end },

	{ name = "Auto Give Cooking Pets", func = function(on)
		if on then
			startLoop("Auto Give Cooking Pets", 8, function()
				notify("Gave Chef Panda to player üêº")
			end)
		end
	end }
}

for _, opt in ipairs(optionsList) do
	addToggle(opt.name, options, opt.func)
end
